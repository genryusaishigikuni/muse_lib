basePath: /api/
definitions:
  types.Song:
    properties:
      id:
        type: integer
      link:
        type: string
      published:
        type: string
      songGroup:
        type: string
      songLyrics:
        items:
          type: string
        type: array
      songName:
        type: string
    type: object
  types.SongAddPayload:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  types.SongDeletePayload:
    properties:
      songGroup:
        type: string
      songName:
        type: string
    type: object
  types.SongUpdatePayload:
    properties:
      link:
        type: string
      published:
        type: string
      songGroup:
        type: string
      songLyrics:
        items:
          type: string
        type: array
      songName:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Music Library App
  title: Muse_Library App API
  version: "1.0"
paths:
  /songs/add:
    post:
      consumes:
      - application/json
      description: Adds a new song with details retrieved from an external API.
      parameters:
      - description: Song data to add
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types.SongAddPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Song added successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Failed to add song
          schema:
            type: string
      summary: Add a new song
      tags:
      - songs
  /songs/delete:
    delete:
      consumes:
      - application/json
      description: Deletes a song based on its name and group.
      parameters:
      - description: Song data to delete
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types.SongDeletePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Song deleted successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Failed to delete song
          schema:
            type: string
      summary: Delete a song
      tags:
      - songs
  /songs/get:
    get:
      description: Retrieves songs matching specified criteria.
      parameters:
      - description: Group name
        in: query
        name: songGroup
        type: string
      - description: Song name
        in: query
        name: songName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Songs retrieved successfully
          schema:
            items:
              $ref: '#/definitions/types.Song'
            type: array
        "404":
          description: No songs found
          schema:
            type: string
        "500":
          description: Failed to fetch songs
          schema:
            type: string
      summary: Retrieve songs
      tags:
      - songs
  /songs/update:
    put:
      consumes:
      - application/json
      description: Updates existing song details.
      parameters:
      - description: Updated song data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types.SongUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Song updated successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Failed to update song
          schema:
            type: string
      summary: Update song
      tags:
      - songs
swagger: "2.0"
